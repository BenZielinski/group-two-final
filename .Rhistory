mainPanel(
tabsetPanel( type = "tabs",
tabPanel("Table", plotOutput( "table" ) )
)
)
),
textOutput("message")
)
runApp()
runApp()
?filter
runApp()
?select
select( state_info, year, name)
runApp()
runApp()
?slider
?sliderInput
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?source
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data_table <- reactive({
in_state <- input$state
in_year <- input$year
in_param <- input$param
in_evic_param <- input$evic_param
filter_data <- state_info %>%
filter( in_state ) %>%
filter( in_year ) %>%
select( state, year, in_param, in_evic_param)
return(filter_data)
})
runApp()
runApp()
runApp()
filter_data <- state_info %>%
filter( name == in_state ) %>%
filter( year == in_year ) %>%
select( state, year, in_param, in_evic_param)
runApp()
?renderTable
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library("ggplot2")
library("ggplot2")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?aes_string
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library("plotly")
runApp()
plot_int <- ggplotly( plot )
runApp()
runApp()
runApp()
?hoverOpts
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?observeEvent
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages(DT)
install.packages("DT")
library("DT")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(state_info)
colnames(state_info)
runApp()
runApp()
runApp()
runApp()
hi <- "hello"
hi[1:]
hi(1:)
hi
runApp()
runApp()
substring(hi, 1)
substring(hi, 2)
hi
runApp()
runApp()
runApp()
view(input$plot_click)
hi <- substring(hi, 2)
bi <- "bye"
hi2 <- c(hi, bi)
hi2$hi
runApp()
runApp()
?list
runApp()
runApp()
runApp()
hi <- list( hi2 = c("1","2"), hi3 = c("3", "4"))
names(hi) <- c("h", "i")
names(hi)[1:2] <- c("b", "i")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?output
?verbatimTextOutput
?fluidPage
runApp()
runApp()
View(state_info)
runApp()
runApp()
runApp()
?round
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('rsconnect')
library("rsconnect")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
trip_data <- read.csv("data/trip.csv", stringsAsFactors = FALSE)
weather_data <- read.csv("data/weather.csv", stringsAsFactors = FALSE)
station_data <- read.csv("data/station.csv", stringsAsFactors = FALSE)
my_server <- function(input,output) {
}
trip_data <- read.csv("data/trip.csv", stringsAsFactors = FALSE)
weather_data <- read.csv("data/weather.csv", stringsAsFactors = FALSE)
station_data <- read.csv("data/station.csv", stringsAsFactors = FALSE)
setwd("~/Desktop/Info 201/Final project/group-two-final")
trip_data <- read.csv("data/trip.csv", stringsAsFactors = FALSE)
weather_data <- read.csv("data/weather.csv", stringsAsFactors = FALSE)
station_data <- read.csv("data/station.csv", stringsAsFactors = FALSE)
View(trip_data)
View(station_data)
View(trip_data)
?split
10%3
10 / 3
10 % 3
10 %% 3
1980 %% 1900
split_factor <- ( trip_data$birthyear %% 1900 ) / 10
test <- split( trip_data, split_factor )
View(test)
View(test[1])
split_factor <- floor( ( trip_data$birthyear %% 1900 ) / 10 )
test <- split( trip_data, split_factor )
View(test)
View(test)
colnames(test)
View(trip_data)
View(test)
head(test)
head(test[1])
head(test[2])
length(head(test[2]))
test[1]
View(test[1])
nrow(test[1])
nrow(test(1))
test[2]
nrow(test$`3`)
decade_split <- split( trip_data, split_factor )
?rapply
test <- rapply(decade_split, nrow())
test <- rapply(decade_split, nrow)
test <- rapply(decade_split, nrow, how = "replace")
View(test)
trip_data <- read.csv("data/trip.csv", stringsAsFactors = FALSE)
weather_data <- read.csv("data/weather.csv", stringsAsFactors = FALSE)
station_data <- read.csv("data/station.csv", stringsAsFactors = FALSE)
my_server <- function(input,output) {
##############
#kevin's code#
##############
split_factor <- floor( ( trip_data$birthyear %% 1900 ) / 10 )
decade_split <- split( trip_data, split_factor )
test <- rapply(decade_split, nrow, how = "replace")
}
split_factor <- floor( ( trip_data$birthyear %% 1900 ) / 10 )
decade_split <- split( trip_data, split_factor )
test <- rapply(decade_split, nrow, how = "replace")
View(test)
test$`3`
?lapply(list, function)
test <- lapply(decade_split, list_function)
list_function <- function( list ) {
nrow( list )
}
test <- lapply(decade_split, list_function)
View(test)
test
View(list)
View(decade_split)
df <- data.frame( matrix( unlist( test ), nrow = 7, byrow = T ),stringsAsFactors=FALSE)
View(df)
View(df)
View(test)
?mutate
?flattening
?flat
library("shiny")
library("dplyr")
library("ggplot2")
library("plotly")
library("rsconnect")
library("shiny")
library("dplyr")
library("shiny")
library("dplyr")
library("ggplot2")
library("plotly")
library("rsconnect")
trip_data <- read.csv("data/trip.csv", stringsAsFactors = FALSE)
weather_data <- read.csv("data/weather.csv", stringsAsFactors = FALSE)
station_data <- read.csv("data/station.csv", stringsAsFactors = FALSE)
my_server <- function(input,output) {
##############
#kevin's code#
##############
split_factor <- floor( ( trip_data$birthyear %% 1900 ) / 10 )
decade_split <- split( trip_data, split_factor )
list_function <- function( list ) {
nrow( list )
}
per_decade <- lapply(decade_split, list_function)
df_decade <- data.frame( matrix( unlist( test ), nrow = 7, byrow = T ),
stringsAsFactors=FALSE)
}
split_factor <- floor( ( trip_data$birthyear %% 1900 ) / 10 )
decade_split <- split( trip_data, split_factor )
list_function <- function( list ) {
nrow( list )
}
per_decade <- lapply(decade_split, list_function)
?flatten
library("jsonlite")
library("jsonlite")
flat_pd <- flatten( per_decade )
df_decade <- data.frame( matrix( unlist( test ), nrow = 7, byrow = T ),
stringsAsFactors=FALSE)
df_decade <- data.frame( matrix( unlist( per_decade ), nrow = 7, byrow = T ),
stringsAsFactors=FALSE)
?mutate
decade <- c("30s", "40s", "50s", "60s", "70s", "80s", "90s")
df_decade <- mutate(df_decade, decade)
View(df_decade)
df_decade <- mutate(df_decade, decade) %>%
colnames( c( "total", "decade" ) )
?colnames
df_decade <- mutate(df_decade, decade) %>%
colnames( df_decade, c( "total", "decade" ) )
df_decade <- mutate(df_decade, decade) %>%
colnames( df_decade ) <- c( "total", "decade" )
colnames( df_decade ) <- c( "total", "decade" )
View(df_decade)
bar_plot <- ggplot( df_decade, aes( x = "", y = total, fill = decade )) +
geom_bar( width = 1, stat = "identity")
bar_plot
pie <- bar_plot + coord_polar("y", start=0)
pie
download.packages(scales)
download.packages("scales")
library("scales)
trip_data <- read.csv("data/trip.csv", stringsAsFactors = FALSE)
weather_data <- read.csv("data/weather.csv", stringsAsFactors = FALSE)
station_data <- read.csv("data/station.csv", stringsAsFactors = FALSE)
my_server <- function(input,output) {
##############
#kevin's code#
##############
split_factor <- floor( ( trip_data$birthyear %% 1900 ) / 10 )
decade_split <- split( trip_data, split_factor )
list_function <- function( list ) {
nrow( list )
}
per_decade <- lapply(decade_split, list_function)
df_decade <- data.frame( matrix( unlist( per_decade ), nrow = 7, byrow = T ),
stringsAsFactors=FALSE)
decade <- c("30s", "40s", "50s", "60s", "70s", "80s", "90s")
df_decade <- mutate(df_decade, decade)
colnames( df_decade ) <- c( "total", "decade" )
bar_plot <- ggplot( df_decade, aes( x = "", y = total, fill = decade )) +
geom_bar( width = 1, stat = "identity")
pie <- bar_plot + coord_polar("y", start=0)
pie
}
library("scales")
# creating the plot
bar_plot <- ggplot( df_decade, aes( x = factor( 1 ), y = total, fill = decade )) +
geom_bar( width = 1, stat = "identity")
pie <- bar_plot + coord_polar("y", start=0)
pie
# creating the plot
bar_plot <- ggplot( df_decade, aes( x = factor( 1 ), y = total, fill = decade )) +
geom_bar( width = 1, stat = "identity") +
coord_polar("y")
pie <- bar_plot + coord_polar("y", start=0)
pie
# creating the plot
bar_plot <- ggplot( df_decade, aes( x = factor( 1 ), y = total, fill = decade )) +
geom_bar( width = 1, stat = "identity")
pie <- bar_plot + coord_polar("y", start=0)
pie
# creating the plot
bar_plot <- ggplot( df_decade, aes( x = "", y = total, fill = decade )) +
geom_bar( width = 1, stat = "identity")
pie <- bar_plot + coord_polar("y", start=0)
pie
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
pie + scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = value/3 + c(0, cumsum(total)[-length(total)]),
label = percent(total/100)), size=5)
pie + scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = total/3 + c(0, cumsum(total)[-length(total)]),
label = percent(total/100)), size=5)
pie + scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = total/3 + c(0, cumsum(total)[-length(total)]),
label = percent(total/146167)), size=5)
pie
pie + scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = total/3 + c(0, cumsum(total)[-length(total)]),
label = percent(total/146167)), size=5)
pie + scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = total/3 + c(0, cumsum(total)[-length(total)]),
label = percent(total/146167)), size=1)
pie +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = total/3 + c(0, cumsum(total)[-length(total)]),
label = percent(total/146167)), size=1)
pie +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = total/3 + c(0, cumsum(total)[-length(total)]),
label = percent(total/146167)), size=2)
install.packages("waffles")
devtools::install_github("hrbrmstr/waffle")
pie
library("waffles")
library("waffle")
library(waffle)
devtools::install_github("hrbrmstr/waffle")
library(waffle)
pie <- bar_plot + coord_polar("y", start=0)
pie
